{
  "address": "0xFf1Dd488c7b66A12b9748EdE788EeDEE3BB97193",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "feedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Donation__NotEnoughEth",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Donate",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountDonated",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ethAmount",
          "type": "uint256"
        }
      ],
      "name": "checkMinimumInUsd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "decimalPlaces",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEthPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "passOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "supporters",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "widthdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0xb2679d64677deb51bd77b2ec6bd227967a88320b26e4c685a9d7deeb7620512e",
  "receipt": {
    "to": null,
    "from": "0xB6816396f3B685729D6d1d1F11ca9D3C01eCfcc8",
    "contractAddress": "0xFf1Dd488c7b66A12b9748EdE788EeDEE3BB97193",
    "transactionIndex": 0,
    "gasUsed": "881068",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x2d4161b44ac4e0ccb2719a1d62fa8592a471bb4d444012bc62c92fde2e84abfb",
    "transactionHash": "0xb2679d64677deb51bd77b2ec6bd227967a88320b26e4c685a9d7deeb7620512e",
    "logs": [],
    "blockNumber": 7435393,
    "cumulativeGasUsed": "881068",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
  ],
  "numDeployments": 10,
  "solcInputHash": "5298ed509389d8cdf6db65e126da4aba",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"feedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Donation__NotEnoughEth\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Donate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountDonated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"}],\"name\":\"checkMinimumInUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"decimalPlaces\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEthPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"passOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"supporters\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"widthdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Mazen Jamshed\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Donate Funds\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Only use on testnet. Not fully tested yet\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Donation.sol\":\"Donation\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/Donation.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.7;\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n/// @title Donate Funds\\n/// @author Mazen Jamshed\\n/// @notice Only use on testnet. Not fully tested yet\\n\\ncontract Donation {\\n    error Donation__NotEnoughEth();\\n    mapping(address => uint256) public addressToAmountDonated; // amount donated by an address\\n\\n    address private owner; // Deployer\\n    address[] public supporters; // Array of donators\\n    uint256 public constant MINIMUM_USD = 50 * 10**18;\\n\\n    AggregatorV3Interface internal priceFeed;\\n\\n    constructor(AggregatorV3Interface feedAddress) {\\n        owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(feedAddress);\\n    }\\n\\n    function decimals() public view returns (uint8 decimalPlaces) {\\n        return priceFeed.decimals();\\n    }\\n\\n    function getEthPrice() public view returns (uint256) {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n\\n        return uint256(answer * (10000000000)); // answer * 1 to the power of 10 to get 18 digit decimal\\n    }\\n\\n    function checkMinimumInUsd(uint256 ethAmount)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        uint256 currentEth = getEthPrice(); // current eth price with 18 decimals\\n\\n        uint256 ethAmountInUsd = (currentEth * ethAmount) /\\n            (1000000000000000000);\\n        return ethAmountInUsd;\\n    }\\n\\n    // };\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"You are not the owner!\\\");\\n        _;\\n    }\\n\\n    function passOwnership(address payable newOwner) public onlyOwner {\\n        owner = newOwner;\\n    }\\n\\n    //* Minimum amount 50$\\n    function Donate() public payable {\\n        if (checkMinimumInUsd(msg.value) < MINIMUM_USD)\\n            revert Donation__NotEnoughEth();\\n        addressToAmountDonated[msg.sender] += msg.value;\\n        supporters.push(msg.sender);\\n    }\\n\\n    function widthdraw() public payable onlyOwner {\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x659e78154e6ecc1fb38be96eb3d3954d2c9c61cd6b35a1d25a8b8ecb356ecbba\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162000fa238038062000fa28339818101604052810190620000379190620000d7565b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000170565b600081519050620000d18162000156565b92915050565b600060208284031215620000f057620000ef62000151565b5b60006200010084828501620000c0565b91505092915050565b6000620001168262000131565b9050919050565b60006200012a8262000109565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b62000161816200011d565b81146200016d57600080fd5b50565b610e2280620001806000396000f3fe6080604052600436106100865760003560e01c806367c9b0171161005957806367c9b017146101265780636b69a59214610151578063ab381e741461017c578063d917deb5146101b9578063fab9dbb9146101c357610086565b8063313ce5671461008b5780633c24b7d7146100b657806352b50a2a146100f3578063620996df146100fd575b600080fd5b34801561009757600080fd5b506100a0610200565b6040516100ad9190610a00565b60405180910390f35b3480156100c257600080fd5b506100dd60048036038101906100d8919061080a565b6102a7565b6040516100ea919061098a565b60405180910390f35b6100fb6102e6565b005b34801561010957600080fd5b50610124600480360381019061011f91906107dd565b610425565b005b34801561013257600080fd5b5061013b6104f9565b60405161014891906109e5565b60405180910390f35b34801561015d57600080fd5b506101666105b9565b60405161017391906109e5565b60405180910390f35b34801561018857600080fd5b506101a3600480360381019061019e91906107b0565b6105c6565b6040516101b091906109e5565b60405180910390f35b6101c16105de565b005b3480156101cf57600080fd5b506101ea60048036038101906101e5919061080a565b6106e3565b6040516101f791906109e5565b60405180910390f35b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561026a57600080fd5b505afa15801561027e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a291906108b2565b905090565b600281815481106102b757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610376576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036d906109c5565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff164760405161039c90610975565b60006040518083038185875af1925050503d80600081146103d9576040519150601f19603f3d011682016040523d82523d6000602084013e6103de565b606091505b5050905080610422576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610419906109a5565b60405180910390fd5b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ac906109c5565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561056457600080fd5b505afa158015610578573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059c9190610837565b5050509150506402540be400816105b39190610abe565b91505090565b6802b5e3af16b188000081565b60006020528060005260406000206000915090505481565b6802b5e3af16b18800006105f1346106e3565b1015610629576040517fc25e1f8400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106779190610a37565b925050819055506002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000806106ee6104f9565b90506000670de0b6b3a764000084836107079190610bd5565b6107119190610a8d565b90508092505050919050565b60008135905061072c81610d62565b92915050565b60008135905061074181610d79565b92915050565b60008151905061075681610d90565b92915050565b60008135905061076b81610da7565b92915050565b60008151905061078081610da7565b92915050565b60008151905061079581610dd5565b92915050565b6000815190506107aa81610dbe565b92915050565b6000602082840312156107c6576107c5610d08565b5b60006107d48482850161071d565b91505092915050565b6000602082840312156107f3576107f2610d08565b5b600061080184828501610732565b91505092915050565b6000602082840312156108205761081f610d08565b5b600061082e8482850161075c565b91505092915050565b600080600080600060a0868803121561085357610852610d08565b5b600061086188828901610786565b955050602061087288828901610747565b945050604061088388828901610771565b935050606061089488828901610771565b92505060806108a588828901610786565b9150509295509295909350565b6000602082840312156108c8576108c7610d08565b5b60006108d68482850161079b565b91505092915050565b6108e881610c2f565b82525050565b60006108fb600b83610a26565b915061090682610d0d565b602082019050919050565b600061091e601683610a26565b915061092982610d36565b602082019050919050565b6000610941600083610a1b565b915061094c82610d5f565b600082019050919050565b61096081610c7d565b82525050565b61096f81610c87565b82525050565b600061098082610934565b9150819050919050565b600060208201905061099f60008301846108df565b92915050565b600060208201905081810360008301526109be816108ee565b9050919050565b600060208201905081810360008301526109de81610911565b9050919050565b60006020820190506109fa6000830184610957565b92915050565b6000602082019050610a156000830184610966565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610a4282610c7d565b9150610a4d83610c7d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a8257610a81610caa565b5b828201905092915050565b6000610a9882610c7d565b9150610aa383610c7d565b925082610ab357610ab2610cd9565b5b828204905092915050565b6000610ac982610c53565b9150610ad483610c53565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610b1357610b12610caa565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610b5057610b4f610caa565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610b8d57610b8c610caa565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610bca57610bc9610caa565b5b828202905092915050565b6000610be082610c7d565b9150610beb83610c7d565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c2457610c23610caa565b5b828202905092915050565b6000610c3a82610c5d565b9050919050565b6000610c4c82610c5d565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600069ffffffffffffffffffff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b7f596f7520617265206e6f7420746865206f776e65722100000000000000000000600082015250565b50565b610d6b81610c2f565b8114610d7657600080fd5b50565b610d8281610c41565b8114610d8d57600080fd5b50565b610d9981610c53565b8114610da457600080fd5b50565b610db081610c7d565b8114610dbb57600080fd5b50565b610dc781610c87565b8114610dd257600080fd5b50565b610dde81610c94565b8114610de957600080fd5b5056fea26469706673582212204b47dc209232d87a12bb9cbeb246dcc97688160537532e6f678b95d4303e798564736f6c63430008070033",
  "deployedBytecode": "0x6080604052600436106100865760003560e01c806367c9b0171161005957806367c9b017146101265780636b69a59214610151578063ab381e741461017c578063d917deb5146101b9578063fab9dbb9146101c357610086565b8063313ce5671461008b5780633c24b7d7146100b657806352b50a2a146100f3578063620996df146100fd575b600080fd5b34801561009757600080fd5b506100a0610200565b6040516100ad9190610a00565b60405180910390f35b3480156100c257600080fd5b506100dd60048036038101906100d8919061080a565b6102a7565b6040516100ea919061098a565b60405180910390f35b6100fb6102e6565b005b34801561010957600080fd5b50610124600480360381019061011f91906107dd565b610425565b005b34801561013257600080fd5b5061013b6104f9565b60405161014891906109e5565b60405180910390f35b34801561015d57600080fd5b506101666105b9565b60405161017391906109e5565b60405180910390f35b34801561018857600080fd5b506101a3600480360381019061019e91906107b0565b6105c6565b6040516101b091906109e5565b60405180910390f35b6101c16105de565b005b3480156101cf57600080fd5b506101ea60048036038101906101e5919061080a565b6106e3565b6040516101f791906109e5565b60405180910390f35b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561026a57600080fd5b505afa15801561027e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a291906108b2565b905090565b600281815481106102b757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610376576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036d906109c5565b60405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff164760405161039c90610975565b60006040518083038185875af1925050503d80600081146103d9576040519150601f19603f3d011682016040523d82523d6000602084013e6103de565b606091505b5050905080610422576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610419906109a5565b60405180910390fd5b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ac906109c5565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561056457600080fd5b505afa158015610578573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059c9190610837565b5050509150506402540be400816105b39190610abe565b91505090565b6802b5e3af16b188000081565b60006020528060005260406000206000915090505481565b6802b5e3af16b18800006105f1346106e3565b1015610629576040517fc25e1f8400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106779190610a37565b925050819055506002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000806106ee6104f9565b90506000670de0b6b3a764000084836107079190610bd5565b6107119190610a8d565b90508092505050919050565b60008135905061072c81610d62565b92915050565b60008135905061074181610d79565b92915050565b60008151905061075681610d90565b92915050565b60008135905061076b81610da7565b92915050565b60008151905061078081610da7565b92915050565b60008151905061079581610dd5565b92915050565b6000815190506107aa81610dbe565b92915050565b6000602082840312156107c6576107c5610d08565b5b60006107d48482850161071d565b91505092915050565b6000602082840312156107f3576107f2610d08565b5b600061080184828501610732565b91505092915050565b6000602082840312156108205761081f610d08565b5b600061082e8482850161075c565b91505092915050565b600080600080600060a0868803121561085357610852610d08565b5b600061086188828901610786565b955050602061087288828901610747565b945050604061088388828901610771565b935050606061089488828901610771565b92505060806108a588828901610786565b9150509295509295909350565b6000602082840312156108c8576108c7610d08565b5b60006108d68482850161079b565b91505092915050565b6108e881610c2f565b82525050565b60006108fb600b83610a26565b915061090682610d0d565b602082019050919050565b600061091e601683610a26565b915061092982610d36565b602082019050919050565b6000610941600083610a1b565b915061094c82610d5f565b600082019050919050565b61096081610c7d565b82525050565b61096f81610c87565b82525050565b600061098082610934565b9150819050919050565b600060208201905061099f60008301846108df565b92915050565b600060208201905081810360008301526109be816108ee565b9050919050565b600060208201905081810360008301526109de81610911565b9050919050565b60006020820190506109fa6000830184610957565b92915050565b6000602082019050610a156000830184610966565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610a4282610c7d565b9150610a4d83610c7d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a8257610a81610caa565b5b828201905092915050565b6000610a9882610c7d565b9150610aa383610c7d565b925082610ab357610ab2610cd9565b5b828204905092915050565b6000610ac982610c53565b9150610ad483610c53565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610b1357610b12610caa565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610b5057610b4f610caa565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610b8d57610b8c610caa565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610bca57610bc9610caa565b5b828202905092915050565b6000610be082610c7d565b9150610beb83610c7d565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c2457610c23610caa565b5b828202905092915050565b6000610c3a82610c5d565b9050919050565b6000610c4c82610c5d565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600069ffffffffffffffffffff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b7f596f7520617265206e6f7420746865206f776e65722100000000000000000000600082015250565b50565b610d6b81610c2f565b8114610d7657600080fd5b50565b610d8281610c41565b8114610d8d57600080fd5b50565b610d9981610c53565b8114610da457600080fd5b50565b610db081610c7d565b8114610dbb57600080fd5b50565b610dc781610c87565b8114610dd257600080fd5b50565b610dde81610c94565b8114610de957600080fd5b5056fea26469706673582212204b47dc209232d87a12bb9cbeb246dcc97688160537532e6f678b95d4303e798564736f6c63430008070033",
  "devdoc": {
    "author": "Mazen Jamshed",
    "kind": "dev",
    "methods": {},
    "title": "Donate Funds",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "Only use on testnet. Not fully tested yet",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 55,
        "contract": "contracts/Donation.sol:Donation",
        "label": "addressToAmountDonated",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 57,
        "contract": "contracts/Donation.sol:Donation",
        "label": "owner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 60,
        "contract": "contracts/Donation.sol:Donation",
        "label": "supporters",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 70,
        "contract": "contracts/Donation.sol:Donation",
        "label": "priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}